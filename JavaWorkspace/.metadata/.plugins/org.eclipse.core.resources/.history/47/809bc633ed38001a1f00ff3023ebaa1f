package com.app.controller;

import java.io.IOException;
import java.util.List;


import javax.persistence.NoResultException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.MailException;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.app.pojos.User;
import com.app.service.UserService;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;


@Controller
public class UserController 
{
	@Autowired
	private UserService service;
	

	@Autowired
	private JavaMailSender mailSender;
	

	public UserController() {
		System.out.println("Inside User Controller");
	}
			
	@GetMapping("/login")
	public String showLoginForm(User user)
	{
		return "login";
	}

	@PostMapping("/login")
	public String processLoginForm(User user,HttpSession hs,Model map)
	{
		User validUser;
		try {
			validUser = service.validateUser(user.getEmail(),user.getPassword());
			byte[]imgContent =  validUser.getUserImg();
			String url="data:image/jpeg;base64,"+Base64.encode(imgContent);
			System.out.println("------------"+url);
			//map.addAttribute("url",url);
			hs.setAttribute("url",url);
			if(validUser != null)
			{
				hs.setAttribute("validUser", validUser);
				
				return "redirect:dashboard";
			}
		} 
		catch (NoResultException e) {
			map.addAttribute("msg","Invaid login credentials");
			e.printStackTrace();
		}
		return "login";
	}
	
	@GetMapping("/logout")
	public String logoutUser(HttpSession hs)
	{
		
		hs.invalidate();
		return "redirect:login";
	}

	@GetMapping("/register")
	public String showRegisterForm(User user,Model map)
	{
		
		List<String> roles = service.getRoles();
		map.addAttribute("roleList", roles);
		return "register";
	}
	
	@PostMapping("/register")
	public String processRegisterForm(User user,RedirectAttributes flashMap,@RequestParam MultipartFile imageUpload) throws IOException
	{	
		if(imageUpload!=null)
		{
			
			System.out.println(imageUpload.getOriginalFilename());
		user.setUserImg(imageUpload.getBytes());
		flashMap.addFlashAttribute("msg", "Registration done with RegID : "+service.registerUser(user).getUserId());
		}
		return "redirect:login";
	}
	
	@GetMapping("/forgot")
	public String showForgotPassword()
	{
		return "forgotPassword";
	}
	
	@PostMapping("/forgot")
	public String processForgotPassword(HttpServletRequest request,Model map,HttpSession hs)
	{
		String em = request.getParameter("email");
		User user;
		try
		{
			user = service.findByEmail(em);
			hs.setAttribute("user", user);
			if(user !=null)
			{
				int otp = service.generateOtp();
				hs.setAttribute("OTP", otp);
				String msg="Your one time password for forgot password is = "+otp;
				SimpleMailMessage mailMessage = new SimpleMailMessage();
				mailMessage.setTo(user.getEmail());
				mailMessage.setSubject("One Time Password");
				mailMessage.setText(msg);
				try
				{
					mailSender.send(mailMessage);
				}
				catch (MailException e) 
				{
					System.out.println("inside mail exception");
					e.printStackTrace();
				}
				return "otp";
			}
		} catch (NoResultException e) 
		{
			map.addAttribute("msg", "Please enter valid email address");
			e.printStackTrace();
		}
		return "forgotPassword";

	}
	@GetMapping("/value")
	public List<User> getalluser() {
		System.out.println();
		return iuserDao.alluser();
	}

	@PostMapping("/confirmOtp")
	public String confirmOtp(HttpServletRequest request,HttpSession hs)
	{
		int otp = (int) hs.getAttribute("OTP");
		int formOtp = Integer.parseInt(request.getParameter("otp"));
		if(otp == formOtp)
		{
			User user = (User) hs.getAttribute("user");
			String role = user.getUserRole().getRole();
			if(role.equals("BUYER"))
				return "buyer/dashboard";
			else if(role.equals("SELLER"))
				return "seller/dashboard";
			else 
				return "admin/dashboard";
		}
		else
			hs.setAttribute("msg","Enter valid one time password");
			return "otp";
	}
	
	
	@GetMapping("/changepass")
	public String showChangePasswordForm()
	{
		return "changePassword";
	}
	
	@PostMapping("/changepass")
	public String processChangePasswordForm(@RequestParam int id,HttpServletRequest request,HttpSession hs)
	{
		User userPojo = (User) hs.getAttribute("validUser");
		User user = service.getUserById(id);
		String pass =  request.getParameter("confirmPass");
		user.setPassword(pass);
		service.updatePassword(user);
		return "redirect:/dashboard";
	}
	
	@GetMapping("/dashboard")
	public String showDashboard(HttpSession hs)
	{
		
		User userPojo = (User) hs.getAttribute("validUser");
		System.out.println("*********************************"+userPojo);
		String role = userPojo.getUserRole().getRole();
		if(role.equals("BUYER"))
			return "buyer/dashboard";
		else if(role.equals("SELLER"))
			return "seller/dashboard";
		else 
			return "admin/dashboard";
	}
	
	
}























/*

package com.app.controller;

import java.util.List;
import javax.persistence.NoResultException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.MailException;
import org.springframework.mail.MailSender;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dao.IUserDao;
import com.app.pojos.User;

@CrossOrigin(allowedHeaders = "*")
@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired
	IUserDao iuserDao;
	
	@PostMapping("/register")
	public Integer register(@RequestBody User user) {
		System.out.println(user);
		return iuserDao.registerUser(user);
	}
	@GetMapping("/value")
	public List<User> getalluser() {
		System.out.println();
		return iuserDao.alluser();
	}

@PostMapping("/login")
	public User login(@RequestBody User user) {
		System.out.println(user);
		return iuserDao.login(user);
	}
@GetMapping("/forgot")
public String showForgotPassword()
{
	return "forgotPassword";
}

@PostMapping("/forgot")
public String processForgotPassword(HttpServletRequest request,Model map,HttpSession hs)
{
	String em = request.getParameter("email");
	User user;
	try
	{
		
		hs.setAttribute("user", user);
		if(user !=null)
		{
			
			SimpleMailMessage mailMessage = new SimpleMailMessage();
			mailMessage.setTo(user.getEmail());
			mailMessage.setSubject("One Time Password");
			mailMessage.setText(msg);
			try
			{
				MailSender.send(mailMessage);
			}
			catch (MailException e) 
			{
				System.out.println("inside mail exception");
				e.printStackTrace();
			}
			return "otp";
		}
	} catch (NoResultException e) 
	{
		map.addAttribute("msg", "Please enter valid email address");
		e.printStackTrace();
	}
	return "forgotPassword";

}
}*/
